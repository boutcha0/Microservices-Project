spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/order-service
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.hibernate.ddl-auto=update

server.port=8081
spring.application.name=order-service

eureka.client.service-url.defaultZone=http://eureka:password@localhost:8761/eureka

eureka.instance.instance-id=${spring.application.name}:${random.uuid}
eureka.instance.prefer-ip-address=true

# Increased timeout duration
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

# Increased timeout from 3s to 10s
resilience4j.timelimiter.instances.inventory.timeout-duration=10s

# Improved retry configuration with exponential backoff
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=1s
resilience4j.retry.instances.inventory.enable-exponential-backoff=true
resilience4j.retry.instances.inventory.exponential-backoff-multiplier=2

management.endpoints.web.exposure.include=health,info,circuitbreakers,circuitbreakerevents
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

management.tracing.sampling.probability=1.0
# Conditional Zipkin configuration - will not block application startup if Zipkin is unavailable
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.enabled=true
management.zipkin.tracing.connect-timeout=2s
management.zipkin.tracing.read-timeout=2s

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.microservice.order_service.event.OrderPlacedEvent
# Added Kafka producer retries and timeout
spring.kafka.producer.retries=3
spring.kafka.producer.properties.request.timeout.ms=3000